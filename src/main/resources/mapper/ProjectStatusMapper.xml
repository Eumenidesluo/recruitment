<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eumenides.dao.ProjectStatusMapper" >
  <resultMap id="BaseResultMap" type="com.eumenides.entity.ProjectStatus" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="projectId" property="projectid" jdbcType="INTEGER" />
    <result column="isAppoint" property="isappoint" jdbcType="INTEGER" />
    <result column="isFinish" property="isfinish" jdbcType="INTEGER" />
    <result column="applyGroup" property="applygroup" jdbcType="VARCHAR" />
    <result column="appointGroup" property="appointgroup" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    projectId, isAppoint, isFinish, applyGroup, appointGroup
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eumenides.entity.ProjectStatusExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from project_status
    where projectId = #{projectid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from project_status
    where projectId = #{projectid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eumenides.entity.ProjectStatusExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from project_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eumenides.entity.ProjectStatus" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into project_status (projectId, isAppoint, isFinish, 
      applyGroup, appointGroup)
    values (#{projectid,jdbcType=INTEGER}, #{isappoint,jdbcType=INTEGER}, #{isfinish,jdbcType=INTEGER}, 
      #{applygroup,jdbcType=VARCHAR}, #{appointgroup,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.eumenides.entity.ProjectStatus" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into project_status
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        projectId,
      </if>
      <if test="isappoint != null" >
        isAppoint,
      </if>
      <if test="isfinish != null" >
        isFinish,
      </if>
      <if test="applygroup != null" >
        applyGroup,
      </if>
      <if test="appointgroup != null" >
        appointGroup,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectid != null" >
        #{projectid,jdbcType=INTEGER},
      </if>
      <if test="isappoint != null" >
        #{isappoint,jdbcType=INTEGER},
      </if>
      <if test="isfinish != null" >
        #{isfinish,jdbcType=INTEGER},
      </if>
      <if test="applygroup != null" >
        #{applygroup,jdbcType=VARCHAR},
      </if>
      <if test="appointgroup != null" >
        #{appointgroup,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eumenides.entity.ProjectStatusExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from project_status
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_status
    <set >
      <if test="record.projectid != null" >
        projectId = #{record.projectid,jdbcType=INTEGER},
      </if>
      <if test="record.isappoint != null" >
        isAppoint = #{record.isappoint,jdbcType=INTEGER},
      </if>
      <if test="record.isfinish != null" >
        isFinish = #{record.isfinish,jdbcType=INTEGER},
      </if>
      <if test="record.applygroup != null" >
        applyGroup = #{record.applygroup,jdbcType=VARCHAR},
      </if>
      <if test="record.appointgroup != null" >
        appointGroup = #{record.appointgroup,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_status
    set projectId = #{record.projectid,jdbcType=INTEGER},
      isAppoint = #{record.isappoint,jdbcType=INTEGER},
      isFinish = #{record.isfinish,jdbcType=INTEGER},
      applyGroup = #{record.applygroup,jdbcType=VARCHAR},
      appointGroup = #{record.appointgroup,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eumenides.entity.ProjectStatus" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_status
    <set >
      <if test="isappoint != null" >
        isAppoint = #{isappoint,jdbcType=INTEGER},
      </if>
      <if test="isfinish != null" >
        isFinish = #{isfinish,jdbcType=INTEGER},
      </if>
      <if test="applygroup != null" >
        applyGroup = #{applygroup,jdbcType=VARCHAR},
      </if>
      <if test="appointgroup != null" >
        appointGroup = #{appointgroup,jdbcType=INTEGER},
      </if>
    </set>
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eumenides.entity.ProjectStatus" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_status
    set isAppoint = #{isappoint,jdbcType=INTEGER},
      isFinish = #{isfinish,jdbcType=INTEGER},
      applyGroup = #{applygroup,jdbcType=VARCHAR},
      appointGroup = #{appointgroup,jdbcType=INTEGER}
    where projectId = #{projectid,jdbcType=INTEGER}
  </update>
</mapper>